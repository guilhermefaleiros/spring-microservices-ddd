version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    build: ./kafka
    container_name: kafka
    depends_on:
      - zookeeper
    command: sh start.sh
    volumes:
      - ./kafka:/scripts
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9094,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    networks:
      - kafka-network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.28.0-SNAPSHOT
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9094
    ports:
      - 9000:9000
    depends_on:
      - kafka
    networks:
      - kafka-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/dbdata:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=saga-cqrs-mysql
      - MYSQL_USER=administrator
      - MYSQL_PASSWORD=saga-cqrs-mysql

  redis:
    container_name: redis
    image: redis:5.0.3
    ports:
      - "6379:6379"

networks:
  kafka-network:
    driver: bridge
